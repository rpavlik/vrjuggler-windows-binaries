                   VR Juggler Portable Runtime Release Notes
                   -----------------------------------------

For all versions:

    - See the ChangeLog for more system-level changes that do not directly
      affect applications.

===============================================================================

 Version: 1.0.0
Released: July 5, 2005
    New in this release:
       * Support for Windows XP x64 Edition.
       * Memory leak fixes in thread initialization when using SPROC and
         NSPR.

    Recommended chnages when upgrading from all previous versions:
       * Change uses of VPR_OS_Win32 to VPR_OS_Windows to aid in porting
         code to the Win64 platform.

 Version: 1.0 Beta 3
Released: June 7, 2005
    Required changes when upgrading from all previous versions:
       * vpr::ThreadPool::barrier() is now vpr::ThreadPool::wait().

    Recommended changes when upgrading from all previous versions:
       * The following functions in vpr::LibraryLoader are deprecated:

            vpr::LibraryLoader::findDSOAndLookup()
               Use vpr::LibraryLoader::findDSOAndCallEntryPoint() instead
            vpr::LibraryLoader::findEntryPoint()
               Use vpr::LibraryLoader::callEntryPoint() instead

       * Users of vpr::System::gettimeofday() should update use of
         struct timeval and struct timezone to use vpr::TimeVal and
         vpr::TimeZone instead.  Compile errors will be seen on Windows
         due to undefined types or type mismatches.

 Version: 0.26.0
Released: January 13, 2003
    Required changes when upgrading from all previous versions:
        * vpr::Thread::usleep(), vpr::Thread::msleep(), and
          vpr::Thread::sleep() have been removed in favor of using only
          the sleep functions in vpr::System.  All code that used one of
          the removed functions must convert to using the vpr::System
          class.

 Version: 0.22.0
Released: January 6, 2003
    Required changes when upgrading from version 0.21.0:
        * The existing vpr::Thread constructors are once again auto-spawning
          constructors.  Hence, the start() method must not be invoked after
          constructring a new thread.  To create a thread that does not
          spawn automatically, use the new constructor that does not take a
          functor argument.

 Version: 0.21.0
Released: December 24, 2002
    Required changes when upgrading from all previous versions:
        * When creating a vpr::Thread object, the thread will not be spawned
          by the constructor.  Instead, user code must invoke the
          vpr::Thread::start() method on the newly created object to tell
          the thread to begin execution.

 Version: 0.14.0
Released: May 23, 2002
    Required changes when upgrading from all previous versions:
        * Use of vpr::InetAddr, vpr::Uint64, vpr::GUID in STL hash types (e.g.,
          std::hash_map<> and std::hash_set<>) requires that third template
          parameter be specified.  This parameter names the hasher.  The
          hashers are vpr::InetAddr::hash, vpr::Uint64Hash, and
          vpr::GUID::hash.

 Version: 0.12.0
Released: April 1, 2002
    Required changes when upgrading from all previous versions:
        * The serial port abstraction open() method no longer clears the
          attribute bits on the newly created port on any platform.  This
          must be done manually using the new clearAll() method.  Not all
          platforms may deal with this correctly, so users should not
          assume that clearing all the bits is necessarily the best route
          to take during port initialization.

 Version: 0.11.0
Released: February 16, 2002
    Required changes when upgrading from all previous versions:
        * Calls to methods in the synchronization primitives classes
          (vpr::Mutex, vpr::CondVar, etc.) return vpr::ReturnStatus instead
          of integer values.  Code that checks return values on such methods
          should now test for vpr::ReturnStatus::Success and
          vpr::ReturnStatus::Fail.

 Version: 0.4.0
Released: September 4, 2001
    Required changes when upgrading from 0.3.x:
        * vpr::ReturnStatus::Success has been renamed to
          vpr::ReturnStatus::Succeed, and vpr::ReturnStatus::Failure has
          been renamed to vpr::ReturnStatus::Fail.  This has been done to
          work around yet another problem with the X Window System where
          Success is used as a #define symbol.

 Version: 0.3.0
Released: July 23, 2001
    New features:
        * The Boost C++ library is now integrated with VPR.

    Required changes when upgrading from 0.2.x:
        * vpr::Status has been renamed to vpr::ReturnStatus to work around a
          problem with the X Window System using Status as a #define symbol.
          Similarly, the header vpr/Util/Status.h is now named
          vpr/Util/ReturnStatus.h.

 Version: 0.2.5
Released: July 20, 2001

    New features:
        * Non-blocking socket connections can now time out.  If the
          connection does not complete within the given interval, the
          connection times out, and the caller must check again later to
          determine if the connection has completed.

 Version: 0.2.4
Released: July 17, 2001

    Required changes when upgrading from 0.2.x:
        * The out parameter to the read and write methods used to return the
          number of bytes read or written has changed types from ssize_t
          to vpr::Uint32.  -1 is no longer returned through this parameter
          to indicate error.  The method return value is sufficient to do
          this.

 Version: 0.2.3
Released: July 16, 2001

    The Win32 DLL works again.  It had been broken for use with datagram
    sockets.

    New features:
        * The definition of cross-platform types such as vpr::Socket and
          vpr::Thread have been moved into a single file called
          vpr/vprDomain.h.  Files such as vpr/Thread/Thread.h are now much
          simpler and now include only the appropriate platform-specific
          file(s).

 Version: 0.2.2
Released: July 13, 2001

    Improved stability.

    Required changes when upgrading from 0.2.1:
        * Test for vpr::Status::WouldBlock instead of vpr::Status::InProgress
          when using potentially blocking calls with non-blocking I/O
          devices.

    New features:
        * When using a non-blocking I/O device, all methods (except for
          vpr::Status;:connect()) return vpr::Status::WouldBlock if they
          would have blocked.

 Version: 0.2.1
Released: July 11, 2001

    New features:
        The internal I/O implementation classes no longer inherit from
        vpr::BlockIO.  This dramatically reduces the use of virtual functions
        and should improve performance in general.

 Version: 0.2.0
Released: July 2, 2001

    Identical to 0.1.0 but available from HEAD branch.

 Version: 0.1.0
Released: July 2, 2001

    First stable version--internal release only.  The API has been stabilized
    on RELENG_0_1 branch.  Only bug fixes are allowed in subsequent 0.1.x
    releases.

 Version: 0.0.3
Released: June 24, 2001

    Required changes when upgrading from 0.0.2:
        * All header files must be included as <vpr/path/to/file.h>.  In
          most cases, adding "vpr/" is sufficient.
        * The following directories have been renamed:
              o Threads --> Thread
              o Utils   --> Util
        * The following header files have been renamed:
              o Sync/Cond.h --> Sync/CondVar.h

    New features:
        * All I/O methods that can block now take a vpr::Interval argument
          giving the maximum time allowed for the action to complete.  All
          such arguments default to vpr::Interval::NoWait so that the API
          is not broken with respect to previous versions.

 Version: 0.0.2
Released: June 18, 2001

    Last version before total directory restructuring.

 Version: 0.0.1
Released: April 16, 2001

    Initial version.  This is the standalone version of VPR taken from the
    VR Juggler source tree.

===============================================================================
