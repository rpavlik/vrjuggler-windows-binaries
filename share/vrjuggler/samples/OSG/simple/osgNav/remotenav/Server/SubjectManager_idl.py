# Python stubs generated by omniidl from /home/vrjuggler/patrick/juggler/modules/tweek/python/../tweek/idl/SubjectManager.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

# #include "/home/vrjuggler/patrick/juggler/modules/tweek/tweek/idl/Observer.idl"
import Observer_idl
_0_tweek = omniORB.openModule("tweek")
_0_tweek__POA = omniORB.openModule("tweek__POA")
# #include "/home/vrjuggler/patrick/juggler/modules/tweek/tweek/idl/Subject.idl"
import Subject_idl
_0_tweek = omniORB.openModule("tweek")
_0_tweek__POA = omniORB.openModule("tweek__POA")

#
# Start of module "tweek"
#
__name__ = "tweek"
_0_tweek = omniORB.openModule("tweek", r"/home/vrjuggler/patrick/juggler/modules/tweek/python/../tweek/idl/SubjectManager.idl")
_0_tweek__POA = omniORB.openModule("tweek__POA", r"/home/vrjuggler/patrick/juggler/modules/tweek/python/../tweek/idl/SubjectManager.idl")


# interface SubjectManager
_0_tweek._d_SubjectManager = (omniORB.tcInternal.tv_objref, "IDL:tweek/SubjectManager:1.0", "SubjectManager")
omniORB.typeMapping["IDL:tweek/SubjectManager:1.0"] = _0_tweek._d_SubjectManager
_0_tweek.SubjectManager = omniORB.newEmptyClass()
class SubjectManager :
    _NP_RepositoryId = _0_tweek._d_SubjectManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct RegisteredSubject
    _0_tweek.SubjectManager.RegisteredSubject = omniORB.newEmptyClass()
    class RegisteredSubject:
        _NP_RepositoryId = "IDL:tweek/SubjectManager/RegisteredSubject:1.0"

        def __init__(self, subject_name, subject_ref):
            self.subject_name = subject_name
            self.subject_ref = subject_ref
    
    _d_RegisteredSubject  = _0_tweek.SubjectManager._d_RegisteredSubject = (omniORB.tcInternal.tv_struct, RegisteredSubject, RegisteredSubject._NP_RepositoryId, "RegisteredSubject", "subject_name", (omniORB.tcInternal.tv_string,0), "subject_ref", omniORB.typeMapping["IDL:tweek/Subject:1.0"])
    _tc_RegisteredSubject = omniORB.tcInternal.createTypeCode(_d_RegisteredSubject)
    omniORB.registerType(RegisteredSubject._NP_RepositoryId, _d_RegisteredSubject, _tc_RegisteredSubject)
    
    # struct SubjectMgrInfoItem
    _0_tweek.SubjectManager.SubjectMgrInfoItem = omniORB.newEmptyClass()
    class SubjectMgrInfoItem:
        _NP_RepositoryId = "IDL:tweek/SubjectManager/SubjectMgrInfoItem:1.0"

        def __init__(self, key, value):
            self.key = key
            self.value = value
    
    _d_SubjectMgrInfoItem  = _0_tweek.SubjectManager._d_SubjectMgrInfoItem = (omniORB.tcInternal.tv_struct, SubjectMgrInfoItem, SubjectMgrInfoItem._NP_RepositoryId, "SubjectMgrInfoItem", "key", (omniORB.tcInternal.tv_string,0), "value", (omniORB.tcInternal.tv_string,0))
    _tc_SubjectMgrInfoItem = omniORB.tcInternal.createTypeCode(_d_SubjectMgrInfoItem)
    omniORB.registerType(SubjectMgrInfoItem._NP_RepositoryId, _d_SubjectMgrInfoItem, _tc_SubjectMgrInfoItem)
    
    # typedef ... SubjectList
    class SubjectList:
        _NP_RepositoryId = "IDL:tweek/SubjectManager/SubjectList:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_SubjectList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:tweek/SubjectManager/RegisteredSubject:1.0"], 0)
    _ad_SubjectList = (omniORB.tcInternal.tv_alias, SubjectList._NP_RepositoryId, "SubjectList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:tweek/SubjectManager/RegisteredSubject:1.0"], 0))
    _tc_SubjectList = omniORB.tcInternal.createTypeCode(_ad_SubjectList)
    omniORB.registerType(SubjectList._NP_RepositoryId, _ad_SubjectList, _tc_SubjectList)
    
    # typedef ... SubjectManagerInfoList
    class SubjectManagerInfoList:
        _NP_RepositoryId = "IDL:tweek/SubjectManager/SubjectManagerInfoList:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_SubjectManagerInfoList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:tweek/SubjectManager/SubjectMgrInfoItem:1.0"], 0)
    _ad_SubjectManagerInfoList = (omniORB.tcInternal.tv_alias, SubjectManagerInfoList._NP_RepositoryId, "SubjectManagerInfoList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:tweek/SubjectManager/SubjectMgrInfoItem:1.0"], 0))
    _tc_SubjectManagerInfoList = omniORB.tcInternal.createTypeCode(_ad_SubjectManagerInfoList)
    omniORB.registerType(SubjectManagerInfoList._NP_RepositoryId, _ad_SubjectManagerInfoList, _tc_SubjectManagerInfoList)


_0_tweek.SubjectManager = SubjectManager
_0_tweek._tc_SubjectManager = omniORB.tcInternal.createTypeCode(_0_tweek._d_SubjectManager)
omniORB.registerType(SubjectManager._NP_RepositoryId, _0_tweek._d_SubjectManager, _0_tweek._tc_SubjectManager)

# SubjectManager operations and attributes
SubjectManager._d_getSubject = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:tweek/Subject:1.0"], ), None)
SubjectManager._d_getAllSubjects = ((), (omniORB.typeMapping["IDL:tweek/SubjectManager/SubjectList:1.0"], ), None)
SubjectManager._d_getInfo = ((), (omniORB.typeMapping["IDL:tweek/SubjectManager/SubjectManagerInfoList:1.0"], ), None)
SubjectManager._d_getName = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# SubjectManager object reference
class _objref_SubjectManager (CORBA.Object):
    _NP_RepositoryId = SubjectManager._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getSubject(self, *args):
        return _omnipy.invoke(self, "getSubject", _0_tweek.SubjectManager._d_getSubject, args)

    def getAllSubjects(self, *args):
        return _omnipy.invoke(self, "getAllSubjects", _0_tweek.SubjectManager._d_getAllSubjects, args)

    def getInfo(self, *args):
        return _omnipy.invoke(self, "getInfo", _0_tweek.SubjectManager._d_getInfo, args)

    def getName(self, *args):
        return _omnipy.invoke(self, "getName", _0_tweek.SubjectManager._d_getName, args)

    __methods__ = ["getSubject", "getAllSubjects", "getInfo", "getName"] + CORBA.Object.__methods__

omniORB.registerObjref(SubjectManager._NP_RepositoryId, _objref_SubjectManager)
_0_tweek._objref_SubjectManager = _objref_SubjectManager
del SubjectManager, _objref_SubjectManager

# SubjectManager skeleton
__name__ = "tweek__POA"
class SubjectManager (PortableServer.Servant):
    _NP_RepositoryId = _0_tweek.SubjectManager._NP_RepositoryId


    _omni_op_d = {"getSubject": _0_tweek.SubjectManager._d_getSubject, "getAllSubjects": _0_tweek.SubjectManager._d_getAllSubjects, "getInfo": _0_tweek.SubjectManager._d_getInfo, "getName": _0_tweek.SubjectManager._d_getName}

SubjectManager._omni_skeleton = SubjectManager
_0_tweek__POA.SubjectManager = SubjectManager
del SubjectManager
__name__ = "tweek"

#
# End of module "tweek"
#
__name__ = "SubjectManager_idl"

_exported_modules = ( "tweek", )

# The end.
