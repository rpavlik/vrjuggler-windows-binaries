# Python stubs generated by omniidl from /home/vrjuggler/patrick/juggler/modules/tweek/python/../tweek/idl/Subject.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

# #include "/home/vrjuggler/patrick/juggler/modules/tweek/tweek/idl/Observer.idl"
import Observer_idl
_0_tweek = omniORB.openModule("tweek")
_0_tweek__POA = omniORB.openModule("tweek__POA")

#
# Start of module "tweek"
#
__name__ = "tweek"
_0_tweek = omniORB.openModule("tweek", r"/home/vrjuggler/patrick/juggler/modules/tweek/python/../tweek/idl/Subject.idl")
_0_tweek__POA = omniORB.openModule("tweek__POA", r"/home/vrjuggler/patrick/juggler/modules/tweek/python/../tweek/idl/Subject.idl")


# interface Subject
_0_tweek._d_Subject = (omniORB.tcInternal.tv_objref, "IDL:tweek/Subject:1.0", "Subject")
omniORB.typeMapping["IDL:tweek/Subject:1.0"] = _0_tweek._d_Subject
_0_tweek.Subject = omniORB.newEmptyClass()
class Subject :
    _NP_RepositoryId = _0_tweek._d_Subject[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_tweek.Subject = Subject
_0_tweek._tc_Subject = omniORB.tcInternal.createTypeCode(_0_tweek._d_Subject)
omniORB.registerType(Subject._NP_RepositoryId, _0_tweek._d_Subject, _0_tweek._tc_Subject)

# Subject operations and attributes
Subject._d_attach = ((omniORB.typeMapping["IDL:tweek/Observer:1.0"], ), (), None)
Subject._d_detach = ((omniORB.typeMapping["IDL:tweek/Observer:1.0"], ), (), None)
Subject._d_notify = ((), (), None)

# Subject object reference
class _objref_Subject (CORBA.Object):
    _NP_RepositoryId = Subject._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def attach(self, *args):
        return _omnipy.invoke(self, "attach", _0_tweek.Subject._d_attach, args)

    def detach(self, *args):
        return _omnipy.invoke(self, "detach", _0_tweek.Subject._d_detach, args)

    def notify(self, *args):
        return _omnipy.invoke(self, "notify", _0_tweek.Subject._d_notify, args)

    __methods__ = ["attach", "detach", "notify"] + CORBA.Object.__methods__

omniORB.registerObjref(Subject._NP_RepositoryId, _objref_Subject)
_0_tweek._objref_Subject = _objref_Subject
del Subject, _objref_Subject

# Subject skeleton
__name__ = "tweek__POA"
class Subject (PortableServer.Servant):
    _NP_RepositoryId = _0_tweek.Subject._NP_RepositoryId


    _omni_op_d = {"attach": _0_tweek.Subject._d_attach, "detach": _0_tweek.Subject._d_detach, "notify": _0_tweek.Subject._d_notify}

Subject._omni_skeleton = Subject
_0_tweek__POA.Subject = Subject
del Subject
__name__ = "tweek"

#
# End of module "tweek"
#
__name__ = "Subject_idl"

_exported_modules = ( "tweek", )

# The end.
