# Python stubs generated by omniidl from RemoteNavSubject.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

# #include "/home/dvg/Source/juggler/build_linux_rh80/instlinks/include/tweek/idl/Observer.idl"
import Observer_idl
_0_tweek = omniORB.openModule("tweek")
_0_tweek__POA = omniORB.openModule("tweek__POA")
# #include "/home/dvg/Source/juggler/build_linux_rh80/instlinks/include/tweek/idl/Subject.idl"
import Subject_idl
_0_tweek = omniORB.openModule("tweek")
_0_tweek__POA = omniORB.openModule("tweek__POA")

#
# Start of module "vrj"
#
__name__ = "vrj"
_0_vrj = omniORB.openModule("vrj", r"RemoteNavSubject.idl")
_0_vrj__POA = omniORB.openModule("vrj__POA", r"RemoteNavSubject.idl")


# interface RemoteNavSubject
_0_vrj._d_RemoteNavSubject = (omniORB.tcInternal.tv_objref, "IDL:vrj/RemoteNavSubject:1.0", "RemoteNavSubject")
omniORB.typeMapping["IDL:vrj/RemoteNavSubject:1.0"] = _0_vrj._d_RemoteNavSubject
_0_vrj.RemoteNavSubject = omniORB.newEmptyClass()
class RemoteNavSubject (_0_tweek.Subject):
    _NP_RepositoryId = _0_vrj._d_RemoteNavSubject[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_vrj.RemoteNavSubject = RemoteNavSubject
_0_vrj._tc_RemoteNavSubject = omniORB.tcInternal.createTypeCode(_0_vrj._d_RemoteNavSubject)
omniORB.registerType(RemoteNavSubject._NP_RepositoryId, _0_vrj._d_RemoteNavSubject, _0_vrj._tc_RemoteNavSubject)

# RemoteNavSubject operations and attributes
RemoteNavSubject._d_setPosition = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (), None)
RemoteNavSubject._d_getPosition = ((), (omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), None)
RemoteNavSubject._d_getOrientation = ((), (omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), None)
RemoteNavSubject._d_setOrientation = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (), None)
RemoteNavSubject._d_setVelocity = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (), None)
RemoteNavSubject._d_setRotationalVelocity = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (), None)
RemoteNavSubject._d_setWalkMode = ((omniORB.tcInternal.tv_boolean, ), (), None)

# RemoteNavSubject object reference
class _objref_RemoteNavSubject (_0_tweek._objref_Subject):
    _NP_RepositoryId = RemoteNavSubject._NP_RepositoryId

    def __init__(self):
        _0_tweek._objref_Subject.__init__(self)

    def setPosition(self, *args):
        return _omnipy.invoke(self, "setPosition", _0_vrj.RemoteNavSubject._d_setPosition, args)

    def getPosition(self, *args):
        return _omnipy.invoke(self, "getPosition", _0_vrj.RemoteNavSubject._d_getPosition, args)

    def getOrientation(self, *args):
        return _omnipy.invoke(self, "getOrientation", _0_vrj.RemoteNavSubject._d_getOrientation, args)

    def setOrientation(self, *args):
        return _omnipy.invoke(self, "setOrientation", _0_vrj.RemoteNavSubject._d_setOrientation, args)

    def setVelocity(self, *args):
        return _omnipy.invoke(self, "setVelocity", _0_vrj.RemoteNavSubject._d_setVelocity, args)

    def setRotationalVelocity(self, *args):
        return _omnipy.invoke(self, "setRotationalVelocity", _0_vrj.RemoteNavSubject._d_setRotationalVelocity, args)

    def setWalkMode(self, *args):
        return _omnipy.invoke(self, "setWalkMode", _0_vrj.RemoteNavSubject._d_setWalkMode, args)

    __methods__ = ["setPosition", "getPosition", "getOrientation", "setOrientation", "setVelocity", "setRotationalVelocity", "setWalkMode"] + _0_tweek._objref_Subject.__methods__

omniORB.registerObjref(RemoteNavSubject._NP_RepositoryId, _objref_RemoteNavSubject)
_0_vrj._objref_RemoteNavSubject = _objref_RemoteNavSubject
del RemoteNavSubject, _objref_RemoteNavSubject

# RemoteNavSubject skeleton
__name__ = "vrj__POA"
class RemoteNavSubject (_0_tweek__POA.Subject):
    _NP_RepositoryId = _0_vrj.RemoteNavSubject._NP_RepositoryId


    _omni_op_d = {"setPosition": _0_vrj.RemoteNavSubject._d_setPosition, "getPosition": _0_vrj.RemoteNavSubject._d_getPosition, "getOrientation": _0_vrj.RemoteNavSubject._d_getOrientation, "setOrientation": _0_vrj.RemoteNavSubject._d_setOrientation, "setVelocity": _0_vrj.RemoteNavSubject._d_setVelocity, "setRotationalVelocity": _0_vrj.RemoteNavSubject._d_setRotationalVelocity, "setWalkMode": _0_vrj.RemoteNavSubject._d_setWalkMode}
    _omni_op_d.update(_0_tweek__POA.Subject._omni_op_d)

RemoteNavSubject._omni_skeleton = RemoteNavSubject
_0_vrj__POA.RemoteNavSubject = RemoteNavSubject
del RemoteNavSubject
__name__ = "vrj"

#
# End of module "vrj"
#
__name__ = "RemoteNavSubject_idl"

_exported_modules = ( "vrj", )

# The end.
