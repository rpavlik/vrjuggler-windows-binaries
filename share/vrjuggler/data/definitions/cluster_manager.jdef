<?xml version="1.0" encoding="UTF-8"?>
<?org-vrjuggler-jccl-settings definition.version="3.1"?>
<definition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.vrjuggler.org/jccl/xsd/3.1/definition" name="cluster_manager" icon_path="jar:file:${VJ_BASE_DIR}/bin/beans/ProxyEditor.jar!/org/vrjuggler/vrjconfig/customeditors/proxyeditor/images/position64.jpg" xsi:schemaLocation="http://www.vrjuggler.org/jccl/xsd/3.1/definition http://www.vrjuggler.org/jccl/xsd/3.1/definition.xsd">
   <definition_version version="1" label="Cluster Manager Configuration">
      <abstract>false</abstract>
      <help>All Cluster Manager configuration settings.</help>
      <parent/>
      <category>/Cluster</category>
      <property valuetype="string" variable="true" name="plugin">
         <help>The names of the cluster plugins to load.</help>
         <value label="Plugin" defaultvalue=""/>
      </property>
      <property valuetype="configelementpointer" variable="true" name="cluster_nodes">
         <help>The list of all active nodes in the cluster.</help>
         <value label="Machine"/>
         <allowed_type>cluster_node</allowed_type>
      </property>
      <property valuetype="configelementpointer" variable="false" name="barrier_master">
         <help>The node in the cluster that is responsible for synchronizing all other nodes.</help>
         <value label="Barrier Master"/>
         <allowed_type>cluster_node</allowed_type>
      </property>
      <upgrade_transform/>
   </definition_version>
   <definition_version version="2" label="Cluster Manager Configuration">
      <abstract>false</abstract>
      <help>All Cluster Manager configuration settings. (&lt;a href="http://vrjuggler.org/docs/vrjuggler/3.0/configuration.guide/configuring_vr_juggler/ch04s02.html"&gt;more on Cluster Manager&lt;/a&gt;, &lt;a href="http://www.infiscape.com/documentation/vrjuggler-config/3.0/configuring_vr_juggler/ch04.html"&gt;more on VR Juggler clusters&lt;/a&gt;)</help>
      <parent/>
      <category>/Cluster</category>
      <property valuetype="string" variable="true" name="plugin_path">
         <help>Each value adds to the path where dynamically loadable plugin objects can be found.  The path may make use of environment variables.  For example: &lt;tt&gt;${VJ_BASE_DIR}/lib/gadgeteer/plugins&lt;/tt&gt;.  If no values are set for this property, the default search path will be &lt;tt&gt;${VJ_BASE_DIR}/lib{,32,64}/gadgeteer/plugins&lt;/tt&gt; depending on the compile-time application binary interface (ABI). (&lt;a href="http://vrjuggler.org/docs/vrjuggler/3.0/configuration.guide/configuring_vr_juggler/ch04s02.html"&gt;more ...&lt;/a&gt;)</help>
         <value label="DSO Path" defaultvalue=""/>
      </property>
      <property valuetype="string" variable="true" name="plugin">
         <help>The names of the cluster plugins to load. (&lt;a href="http://vrjuggler.org/docs/vrjuggler/3.0/configuration.guide/configuring_vr_juggler/ch04s02.html"&gt;more ...&lt;/a&gt;)</help>
         <value label="Plugin" defaultvalue=""/>
         <enumeration editable="true">
            <enum label="ApplicationDataManager" value="ApplicationDataManager"/>
            <enum label="RIMPlugin" value="RIMPlugin"/>
            <enum label="StartBarrierPlugin" value="StartBarrierPlugin"/>
            <enum label="SwapLockTCPPlugin" value="SwapLockTCPPlugin"/>
            <enum label="SwapLockWiredPlugin" value="SwapLockWiredPlugin"/>
         </enumeration>
      </property>
      <property valuetype="configelementpointer" variable="true" name="cluster_node">
         <help>The list of all active nodes in the cluster. (&lt;a href="http://vrjuggler.org/docs/vrjuggler/3.0/configuration.guide/configuring_vr_juggler/ch04s02.html"&gt;more ...&lt;/a&gt;)</help>
         <value label="Machine"/>
         <allowed_type>cluster_node</allowed_type>
      </property>
      <upgrade_transform>
         <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jconf="http://www.vrjuggler.org/jccl/xsd/3.0/configuration" version="1.0">
            <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
            <xsl:variable name="jconf">http://www.vrjuggler.org/jccl/xsd/3.0/configuration</xsl:variable>
           
            <xsl:template match="/">
                <xsl:apply-templates/>
            </xsl:template>
           
            <xsl:template match="jconf:cluster_manager">
               <xsl:element namespace="{$jconf}" name="cluster_manager">
                  <xsl:attribute name="name">
                     <xsl:value-of select="@name"/>
                  </xsl:attribute>
                  <xsl:attribute name="version">2</xsl:attribute>
                  <xsl:if test="count(./jconf:plugin) &gt; 0">
                     <xsl:element namespace="{$jconf}" name="plugin_path">
                        <xsl:call-template name="get-path">
                           <xsl:with-param name="original" select="./jconf:plugin"/>
                           <xsl:with-param name="path_sep"><xsl:text>/</xsl:text></xsl:with-param>
                        </xsl:call-template>
                     </xsl:element>
                  </xsl:if>
                  <xsl:apply-templates select="./*"/>
               </xsl:element>
            </xsl:template>

            <xsl:template match="jconf:plugin">
               <xsl:variable name="no_ext">
                  <xsl:choose>
                     <xsl:when test="contains(., '.dll')">
                        <xsl:value-of select="substring-before(., '.dll')"/>
                     </xsl:when>
                     <xsl:when test="contains(., '.dylib')">
                        <xsl:value-of select="substring-before(., '.dylib')"/>
                     </xsl:when>
                     <xsl:otherwise>
                        <xsl:value-of select="substring-before(., '.so')"/>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:variable>

               <xsl:variable name="plugin_name">
                  <xsl:call-template name="strip-path">
                     <xsl:with-param name="original" select="$no_ext"/>
                     <xsl:with-param name="path_sep"><xsl:text>/</xsl:text></xsl:with-param>
                  </xsl:call-template>
               </xsl:variable>

               <xsl:element namespace="{$jconf}" name="plugin">
                  <xsl:choose>
                     <xsl:when test="starts-with($plugin_name, 'lib')">
                        <xsl:value-of select="substring-after($plugin_name, 'lib')"/>
                     </xsl:when>
                     <xsl:otherwise>
                        <xsl:value-of select="$plugin_name"/>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:element>
            </xsl:template>

            <xsl:template match="jconf:cluster_nodes">
               <xsl:element namespace="{$jconf}" name="cluster_node">
                  <xsl:value-of select="."/>
               </xsl:element>
            </xsl:template>

            <xsl:template match="jconf:barrier_master">
            </xsl:template>

            <xsl:template name="get-path">
               <xsl:param name="original"/>
               <xsl:param name="path_sep"/>
               <xsl:variable name="plugin_name">
                  <xsl:call-template name="strip-path">
                     <xsl:with-param name="original" select="$original"/>
                     <xsl:with-param name="path_sep" select="$path_sep"/>
                  </xsl:call-template>
               </xsl:variable>
               <xsl:value-of select="substring-before($original, $plugin_name)"/>
            </xsl:template>

            <xsl:template name="strip-path">
               <xsl:param name="original"/>
               <xsl:param name="path_sep"/>
               <xsl:variable name="last">
                  <xsl:choose>
                     <xsl:when test="contains($original, $path_sep)">
                        <xsl:choose>
                           <xsl:when test="contains(substring-after($original, $path_sep), $path_sep)">
                              <xsl:call-template name="strip-path">
                                 <xsl:with-param name="original"><xsl:value-of select="substring-after($original, $path_sep)"/></xsl:with-param>
                                 <xsl:with-param name="path_sep"><xsl:value-of select="$path_sep"/></xsl:with-param>
                              </xsl:call-template>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:value-of select="substring-after($original, $path_sep)"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:when>
                     <xsl:otherwise>
                        <xsl:text></xsl:text>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:variable>
               <xsl:value-of select="$last"/>
            </xsl:template>
         </xsl:stylesheet>
      </upgrade_transform>
   </definition_version>
   <definition_version version="3" label="Cluster Manager Configuration">
      <abstract>false</abstract>
      <help>All Cluster Manager configuration settings. (&lt;a href="http://www.infiscape.com/documentation/vrjuggler-config/2.0/configuring_vr_juggler/ch04s02.html"&gt;more on Cluster Manager&lt;/a&gt;, &lt;a href="http://www.infiscape.com/documentation/vrjuggler-config/2.0/configuring_vr_juggler/ch04.html"&gt;more on VR Juggler clusters&lt;/a&gt;)</help>
      <parent/>
      <category>/Cluster</category>
      <property valuetype="string" variable="true" name="plugin_path">
         <help>Each value adds to the path where dynamically loadable plugin objects can be found.  The path may make use of environment variables.  For example: &lt;tt&gt;${VJ_BASE_DIR}/lib/gadgeteer/plugins&lt;/tt&gt;.  If no values are set for this property, the default search path will be &lt;tt&gt;${VJ_BASE_DIR}/lib{,32,64}/gadgeteer/plugins&lt;/tt&gt; depending on the compile-time application binary interface (ABI). (&lt;a href="http://www.infiscape.com/documentation/vrjuggler-config/2.0/configuring_vr_juggler/ch04s02.html"&gt;more ...&lt;/a&gt;)</help>
         <value label="DSO Path" defaultvalue=""/>
      </property>
      <property valuetype="string" variable="true" name="plugin">
         <help>The names of the cluster plugins to load. (&lt;a href="http://www.infiscape.com/documentation/vrjuggler-config/2.0/configuring_vr_juggler/ch04s02.html"&gt;more ...&lt;/a&gt;)</help>
         <value label="Plugin" defaultvalue=""/>
         <enumeration editable="true">
            <enum label="ApplicationBarrierManager" value="ApplicationBarrierManager"/>
            <enum label="ApplicationDataManager" value="ApplicationDataManager"/>
            <enum label="RIMPlugin" value="RIMPlugin"/>
         </enumeration>
      </property>
      <property valuetype="configelementpointer" variable="true" name="cluster_node">
         <help>The list of all active nodes in the cluster. (&lt;a href="http://www.infiscape.com/documentation/vrjuggler-config/2.0/configuring_vr_juggler/ch04s02.html"&gt;more ...&lt;/a&gt;)</help>
         <value label="Machine"/>
         <allowed_type>cluster_node</allowed_type>
      </property>
      <property valuetype="boolean" variable="false" name="use_software_swap_lock">
         <help>Should we use software swap lock.</help>
         <value label="Use software swap-lock." defaultvalue="true"/>
      </property>
      <upgrade_transform>
         <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jconf="http://www.vrjuggler.org/jccl/xsd/3.0/configuration" version="1.0">
            <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
            <xsl:variable name="jconf">http://www.vrjuggler.org/jccl/xsd/3.0/configuration</xsl:variable>

            <xsl:template match="/">
                <xsl:apply-templates/>
            </xsl:template>

            <xsl:template match="jconf:cluster_manager">
               <xsl:element namespace="{$jconf}" name="cluster_manager">
                  <xsl:attribute name="name">
                     <xsl:value-of select="@name"/>
                  </xsl:attribute>
                  <xsl:attribute name="version">3</xsl:attribute>
                  <xsl:for-each select="./jconf:plugin_path">
                     <xsl:copy-of select="." />
                  </xsl:for-each>
                  <xsl:for-each select="./jconf:plugin">
                     <xsl:variable name="plugin_name">
                        <xsl:value-of select="." />
                     </xsl:variable>
                     <xsl:choose>
                        <xsl:when test="$plugin_name = 'StartBarrierPlugin'">
                        </xsl:when>
                        <xsl:when test="$plugin_name = 'SwapLockTCPPlugin'">
                        </xsl:when>
                        <xsl:when test="$plugin_name = 'SwapLockWiredPlugin'">
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:copy-of select="." />
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="./jconf:cluster_node">
                     <xsl:copy-of select="." />
                  </xsl:for-each>
                  <xsl:element namespace="{$jconf}" name="use_software_swap_lock">
                     <xsl:text>true</xsl:text>
                  </xsl:element>
               </xsl:element>
            </xsl:template>
         </xsl:stylesheet>
      </upgrade_transform>
   </definition_version>
</definition>
