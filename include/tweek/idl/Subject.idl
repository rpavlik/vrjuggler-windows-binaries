/*************** <auto-copyright.pl BEGIN do not edit this line> **************
 *
 * VR Juggler is (C) Copyright 1998-2010 by Iowa State University
 *
 * Original Authors:
 *   Allen Bierbaum, Christopher Just,
 *   Patrick Hartling, Kevin Meinert,
 *   Carolina Cruz-Neira, Albert Baker
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 *
 *************** <auto-copyright.pl END do not edit this line> ***************/

#ifndef _TWEEK_SUBJECT_IDL_
#define _TWEEK_SUBJECT_IDL_

#include <tweek/idl/Observer.idl>


module tweek
{

/**
 * The most basic interface of all Tweek subjects.  All user-defined subject
 * interfaces must inherit from this interface.
 */
interface Subject
{
   /**
    * Attaches the given observer to this subject.
    *
    * @post A reference to the given observer is retained, and the observer
    *       will be notified whenever the state of this subject changes.
    *
    * @param o The observer to be attached.
    */
   void attach(in Observer o);

   /**
    * Detaches the given observer from this subject.
    *
    * @post The given observer will no longer receive notifications of state
    *       changes for this subject.
    *
    * @param o The observer to be attached.
    */
   void detach(in Observer o);

   /**
    * Notifies all attached observers that the state of this subject has
    * changed in some way.
    *
    * @note Observers are not informed of what aspect of this subject's state
    *       changed.  To get a complete picture of the subject's state, they
    *       must therefore query all state information.
    */
   void notify();
};

};

#endif /* _TWEEK_SUBJECT_IDL_ */
