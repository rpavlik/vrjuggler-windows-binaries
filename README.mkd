VR Juggler Windows Binaries
===========================
Built by Ryan Pavlik <rpavlik@iastate.edu> <http://academic.cleardefinition.com>

Upstream project page: [VR Juggler](http://vrjuggler.googlecode.com)

Build Information
-----------------
* Visual Studio 2008 (9.0) SP1, *with the [Visual C++ 2008 Feature Pack][1]*
	installed for TR1 support.

* 3.0 stable branch of the upstream SVN code r21806

* Both ReleaseDLL and DebugRtDLL build modes

* 32-bit

Usage
-----
There is no "Installation" process - this is a self-contained "prefix" of software. There is a [`vc9-cmd-prompt-here.cmd` script][cmdscript] that essentially starts a "Visual Studio 2008 Command Prompt" in which the `%PATH%` has been extended to include the `bin` and `lib` directories (so DLLs can be found), and the current directory has been set as both `%VJ_BASE_DIR%` and `%VJ_DEPS_DIR%` (so VR Juggler and handmade Visual Studio projects can find things). Using this script means you do *not* need to set/modify any system-wide environment variables. In fact, setting `%VJ_BASE_DIR%` and `%VJ_DEPS_DIR%` system-wide can goof things up (particularly running installed apps and `vrjconfig`)

* If you're using [CMake for VR Juggler][cmake-modules], add the directory where you saved this to your `CMAKE_PREFIX_PATH`, and you'll be able to build your app. (Recommended because it's cross-platform.)

* If you're using just straight Visual Studio projects that refer to the environment variables `VJ_BASE_DIR` and `VJ_DEPS_DIR` in their configuration (such as the samples that come with, you can double-click `vc9-cmd-prompt-here.cmd` and run `devenv` to start Visual Studio's IDE.

* `vrjconfig` can be started with the `bin\vrjconfig.bat` file.

* You can also run VR Juggler apps from the `vc9-cmd-prompt-here.cmd` prompt (you can drop the exe into the command window to enter its full path) - the variables set by the script will ensure it can find everything it needs from VR Juggler.
                                                                                                                                                  
* Finally, you could place a VR Juggler application .exe directly in the `bin` directory to run it, though this is a bit hacky to be doing on a regular basis during development.

[cmdscript]: https://github.com/rpavlik/vrjuggler-windows-binaries/blob/3.0-vc9-32/vc9-cmd-prompt-here.cmd
[cmake-modules]: https://github.com/rpavlik/cmake-modules

Included Dependencies
---------------------
Used during build and also needed to build applications, so bundled in
this tree

* [CPPDOM][2] 1.0.3 (from [fork with CMake support][3])
* [GMTL][4] 0.6.1
* [Boost][5] 1.45
* [Audiere][6] 1.9.4
* [omniORB][9] 4.1.4

Other Dependencies Used
-----------------------
Used during build (for plugins, generall), not needed to build VR
Juggler applications, not bundled in this tree

* [Java JDK][11] 1.6.0_24
* [OpenAL-soft][7]
* [FreeALUT][8] 1.10 built against OpenAL-soft
* [VRPN][10] 07.29 prerelease

[1]: http://www.microsoft.com/downloads/en/details.aspx?FamilyId=D466226B-8DAB-445F-A7B4-448B326C48E7&displaylang=en "Visual C++ 2008 Feature Pack"
[2]: http://sourceforge.net/projects/xml-cppdom/ "CPPDOM Upstream"
[3]: https://github.com/rpavlik/cppdom "CPPDOM on GitHub"
[4]: http://ggt.sourceforge.net/ "GMTL Upstream"
[5]: http://www.boost.org/ "Boost Upstream"
[6]: http://audiere.sourceforge.net/ "Audiere Upstream"
[7]: http://kcat.strangesoft.net/openal.html "OpenAL-soft Upstream"
[8]: http://connect.creativelabs.com/openal/Downloads/Forms/AllItems.aspx?RootFolder=%2Fopenal%2FDownloads%2FALUT&FolderCTID=&View=%7B6A9700C6-7248-4CD2-83F5-268F2C176072%7D "FreeALUT Upstream"
[9]: http://omniorb.sourceforge.net/ "omniORB Upstream"
[10]: http://www.vrpn.org/ "VRPN Upstream"
[11]: http://www.oracle.com/technetwork/java/javase/downloads/index.html "Java JDK Upstream"
